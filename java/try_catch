Try-with-resources in Java 7:
-------------------------------

Try-with-resources in Java 7 is a new exception handling mechanism that makes it easier to correctly close resources that are used within a try-catch block.
Resource Management With Try-Catch-Finally is old School Style.
Managing resources that need to be explicitly closed is somewhat tedious before Java 7.
We don't need to explicitly close the resource. It will take care of all the opened resource.
close() method will be automatically called after the completion of try block. If any exception inside try, then catch block will execute and suppress the
automatic execution of close() method but still close() method gets executed.


Old style:

private static void printFile() throws IOException {
    InputStream input = null;

    try {
        input = new FileInputStream("file.txt");
        int data = input.read();
        while(data != -1){
            System.out.print((char) data);
            data = input.read();
        }
    } finally {
        if(input != null){
            input.close();
        }
    }
}

New style:

private static void printFileJava7() throws IOException {

    try(FileInputStream input = new FileInputStream("file.txt")) {

        int data = input.read();
        while(data != -1){
            System.out.print((char) data);
            data = input.read();
        }
    }
}

We can catch multiple Java exceptions in the same catch clause.
-----------------------------------------------------------------

try {
  ...
} catch (IOException | SQLException ex) {
  ...
}

instead of

try {
    ...
} catch (IOException e) {
    someCode();
} catch (SQLException e) {
    someCode();
}


What does printStackTrace() actually do?
------------------------------------------
try {
       throw new NullPointerException();
   }
   catch (NullPointerException e) {
       System.out.println(e);
   }

try {
       throw new IOException();
   }
   catch (IOException e) {
       e.printStackTrace();
   }

println(e):
java.lang.NullPointerException

e.printStackTrace:
java.io.IOException
     at package.Test.main(Test.java:74)
